import React from 'react';
import { Feather } from '@expo/vector-icons';
import { View, Text, Image, TouchableOpacity, FlatList, Linking } from 'react-native'; //Linking para abrir um app dentro do celular
import { useNavigation, useRoute } from '@react-navigation/native';
//import * as MailComposer from 'expo-mail-composer'; - Comentado porque não consegui instalar o pacote MailComposer para serviços de e-mail ¯\_(ツ)_/¯
/**
 * expo install expo-email-composer
 * warning package-lock.json found. Your project contains lock files generated by tools other than Yarn. 
 * It is advised not to mix package managers in order to avoid resolution inconsistencies caused by unsynchronized lock files. 
 * To clear this warning, remove package-lock.json.
 * [1/4] Resolving packages...
 * error An unexpected error occurred: "https://registry.yarnpkg.com/expo-email-composer: Not found"
 * 
 * ... Entendendo o problema...
 * Coming soon...
 * 
 **/ 

import logoImg from '../../assets/logo.png';

import styles from './styles';

export default function Detail() {
    const navigation = useNavigation();
    const route = useRoute();

    const incident = route.params.incident;
    const message = `Olá ${incident.name}!\nEstou entrando em contato, pois gostaria de ajudar no caso "${incident.title}" com o valor de ${Intl.NumberFormat('pt-BR', {style: 'currency', currency: 'BRL'}).format(incident.value)}`;

    function navigateBack() {
        navigation.goBack();

    }

    function sendMail() {
        MailComposer.composeAsync({
            subject: `Herói do Caso: ${incident.title}`,
            recipients: [incident.email],
            body: message,
        });

    }

    function sendWhatsApp() {
        Linking.openURL(`whatsapp://send?text=${message}&phone=${incident.whatsapp}`);
    }

    return (
        <View style={styles.container}>
             <View style={styles.header}>
                <Image source={logoImg}/>

                <TouchableOpacity onPress={navigateBack}>
                    <Feather name="arrow-left" size={28} color="#E82041" />
                </TouchableOpacity>
            </View>
                <FlatList
                 data = {[1]}
                 style={styles.incidentList}
                 keyExtractor={incident => String(incident)}
                 showsVerticalScrollIndicator={false}
                 renderItem={() => (
                    <View style={styles.incident}>
                        <Text style={styles.incidentProperty}>ONG:</Text>
                 <Text style={styles.incidentValues}>{incident.name} de {incident.city}/{incident.uf}</Text>
                                
                        <Text style={styles.incidentProperty}>CASO:</Text>
                        <Text style={styles.incidentValues}>{incident.title}</Text>

                        <Text style={styles.incidentProperty}>Descrição:</Text>
                 <Text style={styles.incidentValues}>{incident.description}</Text>

        
                        <Text style={styles.incidentProperty}>Valor:</Text>
                        <Text style={styles.incidentValues}>{Intl.NumberFormat('pt-BR', {style: 'currency', currency: 'BRL'}).format(incident.value)}</Text>
                    </View>
                     
                 )}

                />

            <View style={styles.contactBox}>
                <Text style={styles.heroTitle}>Salve o Dia!</Text>
                <Text style={styles.heroTitle}>seja o Herói deste caso.</Text>

                <Text style={styles.heroDescription}>Entre em Contato</Text>

                <View style={styles.actions}>
                    <TouchableOpacity style={styles.action} onPress={sendWhatsApp}>
                        <Text style={styles.actionText}>WhatsApp</Text>
                    </TouchableOpacity>

                    <TouchableOpacity style={styles.action} onPress={sendMail}>
                        <Text style={styles.actionText}>E-mail</Text>
                    </TouchableOpacity>
                </View>


            </View>

        
        </View>
    );
}
